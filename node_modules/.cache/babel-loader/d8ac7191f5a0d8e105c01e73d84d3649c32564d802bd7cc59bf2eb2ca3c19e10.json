{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#0e3a53';\n      showalert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert('Light mode has been enabled', 'success');\n    }\n  };\n  const [alert, setAlert] = useState(null);\n  const showalert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserR, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            title: \"Enter text to Analyze\",\n            mode: mode,\n            showalert: showalert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"vU18JE3Ff4+/IiOoqNDICR2xBus=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Alert","Navbar","TextForm","About","useState","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleMode","document","body","style","backgroundColor","showalert","alert","setAlert","message","type","msg","setTimeout","children","BrowserR","title","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["D:/React/my-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport { useState } from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#0e3a53';\n      showalert('Dark mode has been enabled','success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert('Light mode has been enabled','success' );\n    }\n  }\n\n  const[alert,setAlert] = useState(null);\n  const showalert=(message,type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout( () =>{\n      setAlert(null);\n    },1500)\n\n  }\n\n\n  return (\n    <> \n    <BrowserR>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert} />\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route path=\"/\">\n          <TextForm title=\"Enter text to Analyze\" mode={mode} showalert={showalert}/>\n          </Route>\n    </Switch>\n    </BrowserR>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}